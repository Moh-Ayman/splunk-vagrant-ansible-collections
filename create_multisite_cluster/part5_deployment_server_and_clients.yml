---

########################################################################################################################
# Configure deployment servers & clients
########################################################################################################################

  ######################################################################################################################

- hosts: deployment1-site1
  become: yes
  become_method: sudo

  vars:
   - splunk_installpath: /opt

  tasks:

  # Apply outputs.conf
  # See: http://docs.splunk.com/Documentation/Splunk/latest/Indexer/Forwardmasterdata
  - name: Forward master node data to the indexer layer
    copy: src=cluster_config dest={{ splunk_installpath }}/splunk/etc/apps/ owner=splunk group=splunk

  # Apply outputs.conf for clients
  # See: http://docs.splunk.com/Documentation/Splunk/latest/Indexer/Forwardmasterdata
  - name: Prepare the config_cluster app for deployment
    copy: src=cluster_config dest={{ splunk_installpath }}/splunk/etc/deployment-apps/ owner=splunk group=splunk

  # copy serverclass.conf
  - name: Copy serverclass.conf
    copy: src=serverclass.conf_site1 dest={{ splunk_installpath }}/splunk/etc/system/local/ owner=splunk group=splunk

  # Set as licence slave - This is not supported with trial licence !
  #- name: Set as licence slave
  #  command: "{{ splunk_installpath }}/splunk/bin/splunk edit licenser-localslave -master_uri 'https://master:8089'"
  #  become: yes
  #  become_user: splunk

  # Restart service
  - name: Restart Splunk
    service: name=splunk state=restarted

  # Wait for service startup
  - name: Wait for Splunk startup
    wait_for: port=8089 timeout=30
    ignore_errors: yes

  ######################################################################################################################

- hosts: deployment1-site2
  become: yes
  become_method: sudo

  vars:
   - splunk_installpath: /opt

  tasks:

  # Apply outputs.conf
  # See: http://docs.splunk.com/Documentation/Splunk/latest/Indexer/Forwardmasterdata
  - name: Forward master node data to the indexer layer
    copy: src=cluster_config dest={{ splunk_installpath }}/splunk/etc/apps/ owner=splunk group=splunk

  # Apply outputs.conf for clients
  # See: http://docs.splunk.com/Documentation/Splunk/latest/Indexer/Forwardmasterdata
  - name: Prepare the config_cluster app for deployment
    copy: src=cluster_config dest={{ splunk_installpath }}/splunk/etc/deployment-apps/ owner=splunk group=splunk

  # copy serverclass.conf
  - name: Copy serverclass.conf
    copy: src=serverclass.conf_site2 dest={{ splunk_installpath }}/splunk/etc/system/local/ owner=splunk group=splunk

  # Set as licence slave - This is not supported with trial licence !
  #- name: Set as licence slave
  #  command: "{{ splunk_installpath }}/splunk/bin/splunk edit licenser-localslave -master_uri 'https://master:8089'"
  #  become: yes
  #  become_user: splunk

  # Restart service
  - name: Restart Splunk
    service: name=splunk state=restarted

  # Wait for service startup
  - name: Wait for Splunk startup
    wait_for: port=8089 timeout=30
    ignore_errors: yes

  ######################################################################################################################

- hosts: uf1-site1
  become: yes
  become_method: sudo

  vars:
   - splunk_binpath: "{{ lookup('pipe', 'ls /opt/deployment/splunk_bin/splunkforwarder*.tgz | head -1') }}"
   - splunk_installpath: /opt
   - splunk_deploymentserver_adress: deployment1-site1:8089

  tasks:

############################## Deploy and Configuration Splunk UF ##############################

  # Verify if Splunk Universal Forwarder is already installed
  - name: Check if Splunk Universal Forwarder path exists
    stat: path={{ splunk_installpath }}/splunkforwarder
    register: check_splunk_path

  # Copy and unarchive Splunk Universal Forwarder if not present
  - name: Copy and unarchive Splunk Universal Forwarder
    unarchive: src={{ splunk_binpath }} dest={{ splunk_installpath }}
    when: check_splunk_path.stat.exists == false

  # Start and accept licence
  - name: Start Splunk Universal Forwarder and accept licence
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk start --answer-yes --no-prompt --accept-license"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Enable boot-start
  - name: Enable boot start for Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk enable boot-start"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Change default admin password to admin to allow remote connections
  - name: Set the admin default password to admin
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk edit user admin -password 'admin' -auth admin:changeme"

  # Configure Splunk as a client of the deployment server
  - name: Configure Splunk as client of the deployment server
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk set deploy-poll {{ splunk_deploymentserver_adress }} -auth admin:admin"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Finally restart Splunk
  - name: Restart Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk restart"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  ######################################################################################################################

- hosts: uf1-site2
  become: yes
  become_method: sudo

  vars:
   - splunk_binpath: "{{ lookup('pipe', 'ls /opt/deployment/splunk_bin/splunkforwarder*.tgz | head -1') }}"
   - splunk_installpath: /opt
   - splunk_deploymentserver_adress: deployment1-site2:8089

  tasks:

############################## Deploy and Configuration Splunk UF ##############################

  # Verify if Splunk Universal Forwarder is already installed
  - name: Check if Splunk Universal Forwarder path exists
    stat: path={{ splunk_installpath }}/splunkforwarder
    register: check_splunk_path

  # Copy and unarchive Splunk Universal Forwarder if not present
  - name: Copy and unarchive Splunk Universal Forwarder
    unarchive: src={{ splunk_binpath }} dest={{ splunk_installpath }}
    when: check_splunk_path.stat.exists == false

  # Start and accept licence
  - name: Start Splunk Universal Forwarder and accept licence
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk start --answer-yes --no-prompt --accept-license"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Enable boot-start
  - name: Enable boot start for Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk enable boot-start"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Change default admin password to admin to allow remote connections
  - name: Set the admin default password to admin
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk edit user admin -password 'admin' -auth admin:changeme"

  # Configure Splunk as a client of the deployment server
  - name: Configure Splunk as client of the deployment server
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk set deploy-poll {{ splunk_deploymentserver_adress }} -auth admin:admin"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Finally restart Splunk
  - name: Restart Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk restart"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes
