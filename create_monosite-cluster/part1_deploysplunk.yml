---

- hosts: master peer1 peer2 head1 head2 head3 deployment1
  become: yes
  become_method: sudo

  vars:
   - splunk_binpath: "{{ lookup('pipe', 'ls /opt/deployment/splunk_bin/splunk-*.tgz | head -1') }}"
   - template_hosts: "hosts"
   - splunk_installpath: /opt
   - localzone: Europe/Paris

  tasks:

############################## Set Timezone ##############################

# Configure time zone
  - name: Set timezone variables for Debian / Ubuntu
    copy: content='{{ localzone }}'
          dest=/etc/timezone
          owner=root
          group=root
          mode=0644
          backup=yes
    notify:
      - update timezone
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

  - block:

    - name: Set timezone for CentOS / RHEL / Fedora
      file: src=/usr/share/zoneinfo/{{ localzone }}  dest=/etc/localtime state=link force=yes

    when: ansible_distribution != 'Debian' or ansible_distribution != 'Ubuntu'

  - name: Update hosts file
    action: template src={{ template_hosts }} dest=/etc/hosts

############################## Deploy Splunk ##############################

  - name: Create the system splunk account for splunk
    user: name=splunk comment="system account for Splunk" system=yes state=present

  # Verify if Splunk is already installed
  - name: Check if Splunk path exists
    stat: path={{ splunk_installpath }}/splunk
    register: check_splunk_path

  # Copy and unarchive Splunk
  - name: Copy and unarchive Splunk
    unarchive: src={{ splunk_binpath }} dest={{ splunk_installpath }} owner=splunk group=splunk
    when: check_splunk_path.stat.exists == false

  # Start and accept licence
  - name: Start Splunk and accept licence
    command: "{{ splunk_installpath }}/splunk/bin/splunk start --answer-yes --no-prompt --accept-license"
    become: yes
    become_user: splunk
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Enable boot-start
  - name: Enable boot start for Splunk
    command: "{{ splunk_installpath }}/splunk/bin/splunk enable boot-start -user splunk"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Start service
  - name: Start Splunk service
    service: name=splunk state=started
    when: check_splunk_path.stat.exists == false

  # Wait for service startup
  - name: Wait for Splunk startup
    wait_for: port=8089 delay=5
    when: check_splunk_path.stat.exists == false

  handlers:

    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata
